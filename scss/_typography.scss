
$base-fs: 1em !default;
$base-lh: 1.5;

$body-text-color: #222;
$bg-color: #ffffff;

// Does not work with rem. Only works with em.
@function line-height($fontsize, $lh: $base-lh) {
    @return $lh * (floor($fontsize/$lh/1em) + 1) * 1em/$fontsize;
}

@mixin adjust-font-size($size) {
   font-size: $size;
   line-height: line-height($size);
}

@mixin secondary-text {
    color: #555555;
}

// Takes ratio of line-height. Returns em.
@function rhythm($ratio, $fs: $base-fs, $lh: $base-lh) {
    @return $lh * $ratio * 1em * 1em / $fs;
}

@function root-em($val, $fs: $base-fs) {
    @return $val * 1em / $fs;
}

// Works with em units for horizontal spacing and ratio for vertical.
@mixin spacing($property, $north, $east, $south, $west, $fs: $base-fs) {
    $top: rhythm($north, $fs);
    $bottom: rhythm($south, $fs);
    $right: root-em($east, $fs);
    $left: root-em($west, $fs);
    #{$property}: $top $right $bottom $left;
}

@mixin padding($north, $east: $north, $south: $north, $west: $east, $fs: $base-fs) {
    @include spacing('padding', $north, $east, $south, $west, $fs);
}

@mixin margin($north, $east: $north, $south: $north, $west: $east, $fs: $base-fs) {
    @include spacing('margin', $north, $east, $south, $west, $fs);
}

h1, h2, h3 {
    font-weight: normal;
}
h2 {
    $fs: ms(7);
    @include adjust-font-size(ms(7));
    margin: $base-lh*1em*1em/$fs/2 0 $base-lh*1em*1em/$fs/2 0.5em / ms(7)*1em;
}
h3 {
    $fs: ms(4);
    @include adjust-font-size($fs);
    margin: $base-lh*1em*1em/$fs/2 0 $base-lh*1em*1em/$fs/2 0.5em/$fs*1em;
}
